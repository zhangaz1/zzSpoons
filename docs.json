[
  {
    "Command": [],
    "Constant": [],
    "Constructor": [],
    "Deprecated": [],
    "Field": [],
    "Function": [],
    "Method": [
      {
        "def": "Hammer:autoReloadConfig(files)",
        "desc": "Reload config only if any of the Lua files in `files` have changed",
        "doc": "Reload config only if any of the Lua files in `files` have changed",
        "name": "autoReloadConfig",
        "signature": "Hammer:autoReloadConfig(files)",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "Hammer:bindHotkeys(mapping)",
        "desc": "Binds hotkeys for Hammer",
        "doc": "Binds hotkeys for Hammer\n\nParameters:\n * mapping - A table containing hotkey objifier/key details for the following items:\n  * config_reload - Manually trigger a config reload",
        "name": "bindHotkeys",
        "parameters": [
          " * mapping - A table containing hotkey objifier/key details for the following items:",
          "  * config_reload - Manually trigger a config reload"
        ],
        "signature": "Hammer:bindHotkeys(mapping)",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "Hammer:reloadConfig()",
        "desc": "Manually reload configuration (wrapper around `hs.reload`)",
        "doc": "Manually reload configuration (wrapper around `hs.reload`)",
        "name": "reloadConfig",
        "signature": "Hammer:reloadConfig()",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "Hammer:start()",
        "desc": "Start the Spoon. At the moment this includes:",
        "doc": "Start the Spoon. At the moment this includes:\n * Set up the file watcher for auto-config-reload",
        "name": "start",
        "signature": "Hammer:start()",
        "stripped_doc": " * Set up the file watcher for auto-config-reload",
        "type": "Method"
      }
    ],
    "Variable": [
      {
        "def": "Hammer.auto_reload_config",
        "desc": "If true, automatically reload Hammerspoon config when any `.lua` files inside `hs.configdir` changes",
        "doc": "If true, automatically reload Hammerspoon config when any `.lua` files inside `hs.configdir` changes",
        "name": "auto_reload_config",
        "signature": "Hammer.auto_reload_config",
        "stripped_doc": "",
        "type": "Variable"
      },
      {
        "def": "Hammer.install_cli",
        "desc": "If true, install the `hs` command line tool",
        "doc": "If true, install the `hs` command line tool",
        "name": "install_cli",
        "signature": "Hammer.install_cli",
        "stripped_doc": "",
        "type": "Variable"
      }
    ],
    "desc": "Automate some Hammerspoon configuration tasks",
    "doc": "Automate some Hammerspoon configuration tasks\n\nDownload: [https://github.com/Hammerspoon/Spoons/raw/master/Spoons/Hammer.spoon.zip](https://github.com/Hammerspoon/Spoons/raw/master/Spoons/Hammer.spoon.zip)",
    "items": [
      {
        "def": "Hammer.auto_reload_config",
        "desc": "If true, automatically reload Hammerspoon config when any `.lua` files inside `hs.configdir` changes",
        "doc": "If true, automatically reload Hammerspoon config when any `.lua` files inside `hs.configdir` changes",
        "name": "auto_reload_config",
        "signature": "Hammer.auto_reload_config",
        "stripped_doc": "",
        "type": "Variable"
      },
      {
        "def": "Hammer:autoReloadConfig(files)",
        "desc": "Reload config only if any of the Lua files in `files` have changed",
        "doc": "Reload config only if any of the Lua files in `files` have changed",
        "name": "autoReloadConfig",
        "signature": "Hammer:autoReloadConfig(files)",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "Hammer:bindHotkeys(mapping)",
        "desc": "Binds hotkeys for Hammer",
        "doc": "Binds hotkeys for Hammer\n\nParameters:\n * mapping - A table containing hotkey objifier/key details for the following items:\n  * config_reload - Manually trigger a config reload",
        "name": "bindHotkeys",
        "parameters": [
          " * mapping - A table containing hotkey objifier/key details for the following items:",
          "  * config_reload - Manually trigger a config reload"
        ],
        "signature": "Hammer:bindHotkeys(mapping)",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "Hammer.install_cli",
        "desc": "If true, install the `hs` command line tool",
        "doc": "If true, install the `hs` command line tool",
        "name": "install_cli",
        "signature": "Hammer.install_cli",
        "stripped_doc": "",
        "type": "Variable"
      },
      {
        "def": "Hammer:reloadConfig()",
        "desc": "Manually reload configuration (wrapper around `hs.reload`)",
        "doc": "Manually reload configuration (wrapper around `hs.reload`)",
        "name": "reloadConfig",
        "signature": "Hammer:reloadConfig()",
        "stripped_doc": "",
        "type": "Method"
      },
      {
        "def": "Hammer:start()",
        "desc": "Start the Spoon. At the moment this includes:",
        "doc": "Start the Spoon. At the moment this includes:\n * Set up the file watcher for auto-config-reload",
        "name": "start",
        "signature": "Hammer:start()",
        "stripped_doc": " * Set up the file watcher for auto-config-reload",
        "type": "Method"
      }
    ],
    "name": "Hammer",
    "stripped_doc": "\nDownload: [https://github.com/Hammerspoon/Spoons/raw/master/Spoons/Hammer.spoon.zip](https://github.com/Hammerspoon/Spoons/raw/master/Spoons/Hammer.spoon.zip)",
    "submodules": [],
    "type": "Module"
  }
]